on:
  push:
    branches:
      - master

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        PORT: 8080
        ENV: production
        DATABASE_URL: ${{ secrets.API_DATABASE_URL }}
        AWS_ACCESS_KEY: ${{ secrets.API_AWS_ACCESS_KEY }}
        AWS_SECRET_KEY: ${{ secrets.API_AWS_SECRET_KEY }}
        AWS_REGION: eu-north-1
        AUTH0_CLIENT_ID: ${{ secrets.API_AUTH0_CLIENT_ID }}
        AUTH0_CLIENT_SECRET: ${{ secrets.API_AUTH0_CLIENT_SECRET }}
        AUTH0_URL: https://dart3.eu.auth0.com
        AUTH0_AUDIENCE: https://dart3.app
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: dart3-api
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker-compose build
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
  
    - name: Download task definition
      id: download-task-def
      run: |
        aws ecs describe-task-definition --task-definition dart3-api --query taskDefinition > task-definition.json
    
    - name: Render task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: dart3-api
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: dart3-service
        cluster: dart3-cluster
        wait-for-service-stability: true
